{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "cs2vpuHp2vok",
        "9G7x_nvG0jCM",
        "yXXJEa2Y3LH8",
        "Y_HPKQXIL_fV",
        "-XW4OWZt2vuD"
      ]
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import math \n",
        "import numpy as np \n",
        "import pandas as pd \n",
        "from datetime import date, timedelta, datetime \n",
        "from pandas.plotting import register_matplotlib_converters \n",
        "import matplotlib.pyplot as plt \n",
        "import matplotlib.dates as mdates \n",
        "import tensorflow as tf\n",
        "from sklearn.metrics import mean_absolute_error, mean_squared_error \n",
        "from tensorflow.keras import Sequential \n",
        "from tensorflow.keras.layers import LSTM, Dense, Dropout \n",
        "from tensorflow.keras.callbacks import EarlyStopping \n",
        "from sklearn.preprocessing import RobustScaler, MinMaxScaler \n",
        "import seaborn as sns \n",
        "from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error"
      ],
      "metadata": {
        "id": "spVxgBAPzV4J"
      },
      "execution_count": 261,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive \n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3hOEusDmTnz2",
        "outputId": "a29e42e0-23af-4ec2-de13-397842e32df7"
      },
      "execution_count": 262,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Loading Dataset"
      ],
      "metadata": {
        "id": "AJe0P2UTvAb9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df = pd.read_csv('/content/drive/MyDrive/Semester 7/Machine Learning/Final Report/GOOG.csv', index_col= 'Date')\n",
        "# df = pd.read_csv('/content/drive/MyDrive/Machine Learning/Final Report/GOOG.csv', index_col= 'Date')\n",
        "#drop null value \n",
        "df.dropna(inplace=True)"
      ],
      "metadata": {
        "id": "sbi-R8bHUiZl"
      },
      "execution_count": 263,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "yHQUiso1seuR",
        "outputId": "4cd7e895-73d5-4ba9-dfde-d480b88e700f"
      },
      "execution_count": 264,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 Open        High        Low      Close  Adj Close    Volume\n",
              "Date                                                                        \n",
              "2019-01-02  50.828499   52.616001  50.785500  52.292500  52.292500  30652000\n",
              "2019-01-03  52.049999   52.848999  50.703499  50.803001  50.803001  36822000\n",
              "2019-01-04  51.629501   53.542000  51.370899  53.535500  53.535500  41878000\n",
              "2019-01-07  53.575001   53.700001  52.737999  53.419498  53.419498  39638000\n",
              "2019-01-08  53.805500   54.228001  53.026501  53.813999  53.813999  35298000\n",
              "...               ...         ...        ...        ...        ...       ...\n",
              "2022-11-14  95.500000   97.180000  95.112999  96.029999  96.029999  24170100\n",
              "2022-11-15  98.669998  100.419998  97.019997  98.720001  98.720001  31831000\n",
              "2022-11-16  98.019997   99.849998  97.902000  98.989998  98.989998  24660200\n",
              "2022-11-17  97.180000   99.480003  97.099998  98.500000  98.500000  21818700\n",
              "2022-11-18  99.010002   99.160004  96.739998  97.800003  97.800003  24959300\n",
              "\n",
              "[980 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-912ef193-b5a4-4ac1-a06d-87530444297d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Adj Close</th>\n",
              "      <th>Volume</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2019-01-02</th>\n",
              "      <td>50.828499</td>\n",
              "      <td>52.616001</td>\n",
              "      <td>50.785500</td>\n",
              "      <td>52.292500</td>\n",
              "      <td>52.292500</td>\n",
              "      <td>30652000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-01-03</th>\n",
              "      <td>52.049999</td>\n",
              "      <td>52.848999</td>\n",
              "      <td>50.703499</td>\n",
              "      <td>50.803001</td>\n",
              "      <td>50.803001</td>\n",
              "      <td>36822000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-01-04</th>\n",
              "      <td>51.629501</td>\n",
              "      <td>53.542000</td>\n",
              "      <td>51.370899</td>\n",
              "      <td>53.535500</td>\n",
              "      <td>53.535500</td>\n",
              "      <td>41878000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-01-07</th>\n",
              "      <td>53.575001</td>\n",
              "      <td>53.700001</td>\n",
              "      <td>52.737999</td>\n",
              "      <td>53.419498</td>\n",
              "      <td>53.419498</td>\n",
              "      <td>39638000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-01-08</th>\n",
              "      <td>53.805500</td>\n",
              "      <td>54.228001</td>\n",
              "      <td>53.026501</td>\n",
              "      <td>53.813999</td>\n",
              "      <td>53.813999</td>\n",
              "      <td>35298000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-14</th>\n",
              "      <td>95.500000</td>\n",
              "      <td>97.180000</td>\n",
              "      <td>95.112999</td>\n",
              "      <td>96.029999</td>\n",
              "      <td>96.029999</td>\n",
              "      <td>24170100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-15</th>\n",
              "      <td>98.669998</td>\n",
              "      <td>100.419998</td>\n",
              "      <td>97.019997</td>\n",
              "      <td>98.720001</td>\n",
              "      <td>98.720001</td>\n",
              "      <td>31831000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-16</th>\n",
              "      <td>98.019997</td>\n",
              "      <td>99.849998</td>\n",
              "      <td>97.902000</td>\n",
              "      <td>98.989998</td>\n",
              "      <td>98.989998</td>\n",
              "      <td>24660200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-17</th>\n",
              "      <td>97.180000</td>\n",
              "      <td>99.480003</td>\n",
              "      <td>97.099998</td>\n",
              "      <td>98.500000</td>\n",
              "      <td>98.500000</td>\n",
              "      <td>21818700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-18</th>\n",
              "      <td>99.010002</td>\n",
              "      <td>99.160004</td>\n",
              "      <td>96.739998</td>\n",
              "      <td>97.800003</td>\n",
              "      <td>97.800003</td>\n",
              "      <td>24959300</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>980 rows × 6 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-912ef193-b5a4-4ac1-a06d-87530444297d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-912ef193-b5a4-4ac1-a06d-87530444297d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-912ef193-b5a4-4ac1-a06d-87530444297d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 264
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Feature selection"
      ],
      "metadata": {
        "id": "yEm-4SHdtH7Y"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.feature_selection import SelectKBest\n",
        "from sklearn.feature_selection import chi2"
      ],
      "metadata": {
        "id": "O6IttYO9tsjE"
      },
      "execution_count": 265,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.drop(['Close'], axis = 1) #independent variables\n",
        "y = df.iloc[:,-3]"
      ],
      "metadata": {
        "id": "35PMFR7rsC9q"
      },
      "execution_count": 266,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import xgboost\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "model = xgboost.XGBClassifier()\n",
        "model.fit(X,y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "T3WWNn--r7VG",
        "outputId": "09d84edb-8574-4876-c284-69ee167bd634"
      },
      "execution_count": 267,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "XGBClassifier(objective='multi:softprob')"
            ]
          },
          "metadata": {},
          "execution_count": 267
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "feat_imp = pd.Series(model.feature_importances_, index=X.columns)\n",
        "\n",
        "feat_imp\n",
        "feat_imp.nlargest(10).plot(kind='barh')\n",
        "\n",
        "plt.figure(figsize=(8,6))\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "id": "xVC_xyjZPmku",
        "outputId": "e71bde68-ce21-481c-ac56-8e05a35fac8b"
      },
      "execution_count": 268,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZIAAAD4CAYAAADGmmByAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAS00lEQVR4nO3df7DldV3H8efLJVaQWKCFWkH3iuGkuLDIok0KKmmaa0FJsSSJZlHaTFNOJSSVOtWsOaWUMyI2uVqJ5A/CiVKRRNTY8K6uu4AhC6zpRlCim7iKsLz743w3D4d7d+/dz7nn3Mt9PmbO3O/5fL/fz/d9vufsvs7n+zn33FQVkiTtr0eNuwBJ0sJmkEiSmhgkkqQmBokkqYlBIklqcsC4Cxi15cuX18TExLjLkKQFZdOmTf9TVUdOtW7RBcnExASTk5PjLkOSFpQkX55unZe2JElNDBJJUhODRJLUxCCRJDUxSCRJTQwSSVITg0SS1MQgkSQ1MUgkSU0W3W+2b92xk4kLrhp3GZIEwPb1a8ddQjNHJJKkJgaJJKmJQSJJamKQSJKaGCSSpCYGiSSpiUEiSWrSHCRJPpHkBQNtv5nk7dNsvz3J8tbjSpLmh2GMSC4D1g20revaJUmPcMMIkg8Aa5McCJBkAngscHSSrUluTPKmwZ2STCS5se/+byd5fbd8bZK3JJlM8sUkpyT5UJJbk/xR3z7nJrkhyeYk70iyZAiPR5I0C81BUlX3ADcAP9k1rQM+DrwJOB1YDZyS5MxZdv3dqloDXAJcCfw68FTg5Ul+IMmTgbOBZ1bVamA38NKpOkpyfhdKk7t37ZxlGZKkvRnWZHv/5a11wJeBa6vqv6vqAeDvgNNm2eeHu59bgZuq6s6qug+4HXgc8OPAycBnk2zu7h87VUdVdWlVramqNUsOXjbLMiRJezOsL228EnhLkqcBBwObgSfuY58HeGiQPXpg/X3dzwf7lvfcPwAI8O6qunB/i5YktRvKiKSq7gU+Afw1vdHJDcCzkyzv5i3OAT45sNtdwFHdZaqlwItnedhrgLOSHAWQ5IgkK1sehyRp9ob5NfKXAVcA66rqziQX0AuXAFdV1ZX9G1fV/UneSC90dgD/PpuDVdXNSS4CPpbkUcD99OZRvtz+UCRJM5WqGncNI7V0xXG14ry3jrsMSQIWzt8jSbKp+wDUw/ib7ZKkJgaJJKmJQSJJamKQSJKaGCSSpCbD/PjvgrDq6GVMLpBPSUjSQuCIRJLUxCCRJDUxSCRJTQwSSVITg0SS1MQgkSQ1MUgkSU0MEklSE4NEktTEIJEkNTFIJElNDBJJUhODRJLUxCCRJDUxSCRJTQwSSVITg0SS1MQgkSQ1MUgkSU0MEklSE4NEktTkgHEXMGpbd+xk4oKrxl2GJE1r+/q14y5hVhyRSJKaGCSSpCYGiSSpiUEiSWpikEiSmhgkkqQmYw2SJPcO3H95krd1y7+W5GX72P//t5ckjce8/T2Sqrpk3DVIkvZt3l7aSvL6JL/dLZ+SZEuSzUnenOTGvk0fm+QjSW5N8qdjKleSFq1xj0gOSrK57/4RwIen2O5dwK9U1fVJ1g+sWw2cBNwH3JLkL6vqK3NTriRp0LhHJN+uqtV7bsAfDG6Q5DDg+6vq+q7pvQObXFNVO6vqO8DNwMop+jg/yWSSyd27dg77MUjSojbuIBmG+/qWdzPFKKuqLq2qNVW1ZsnBy0ZXmSQtAvM+SKrqG8A3kzyja1o3znokSQ8174Ok80rgnd18ymMAr09J0jwx1sn2qjpk4P4GYEO3/Pq+VTdV1QkASS4AJge37+6/eA7LlSRNYdyf2pqptUkupFfvl4GXj7ccSdIeCyJIqupy4PJx1yFJeriFMkciSZqnDBJJUhODRJLUZEHMkQzTqqOXMbl+7bjLkKRHDEckkqQmBokkqYlBIklqYpBIkpoYJJKkJgaJJKmJQSJJamKQSJKaGCSSpCYGiSSpiUEiSWpikEiSmhgkkqQmBokkqYlBIklqYpBIkpoYJJKkJgaJJKmJQSJJamKQSJKaGCSSpCYHjLuAUdu6YycTF1w17jIkaZ+2r1877hJmxBGJJKmJQSJJamKQSJKaGCSSpCYGiSSpiUEiSWpikEiSmow8SJIck+TKJLcmuS3JxUkOHHUdkqThGGmQJAnwIeAfquo44EnAIcAfj7IOSdLwjPo3208HvlNV7wKoqt1Jfgu4I8kdwAuAZcDRwN9W1RsAkpwL/AZwIPBvwKu7fe8FLgZeDHwbOKOq7hrxY5KkRW3Ul7aOBzb1N1TV/wL/QS/Ung68BDgB+Lkka5I8GTgbeGZVrQZ2Ay/tdn8MsLGqTgSuA35lqoMmOT/JZJLJ3bt2zsHDkqTFa75919bVVfU1gCQfAp4FPACcDHy2d2WMg4C7u+2/C/xjt7wJeP5UnVbVpcClAEtXHFdzVbwkLUajDpKbgbP6G5IcCjyeXmAM/idfQIB3V9WFU/R3f1Xt2Wc38y8YJekRb9SXtq4BDk7yMoAkS4A/AzYAu4DnJzkiyUHAmcBnun3OSnJUt88RSVaOuG5J0jRGGiTd6OFn6M1/3Ap8CfgO8HvdJjcAHwS2AB+sqsmquhm4CPhYki3A1cCKUdYtSZreyC8FVdVXgJ8abO/mP75aVWdOsc/lwOVTtB/St/wB4ANDLVaStE/+Zrskqcm8mZyuqg305kokSQuIIxJJUhODRJLUxCCRJDWZN3Mko7Lq6GVMrl877jIk6RHDEYkkqYlBIklqYpBIkpoYJJKkJgaJJKmJQSJJamKQSJKaGCSSpCYGiSSpiUEiSWpikEiSmhgkkqQmBokkqYlBIklqYpBIkpoYJJKkJgaJJKmJQSJJamKQSJKaGCSSpCYGiSSpyQHjLmDUtu7YycQFV427DEmase3r1467hL1yRCJJamKQSJKaGCSSpCYGiSSpiUEiSWpikEiSmsyrIEly77hrkCTNzrwKEknSwjPvgyTJ6iQbk2xJckWSw5MclWRTt/7EJJXk8d3925IcPN6qJWnxmPdBArwHeG1VnQBsBf6wqu4GHp3kUOBUYBI4NclK4O6q2jW+ciVpcZnXX5GSZBlwWFV9smt6N/D+bvlfgWcCpwF/ArwQCPCpKfo5HzgfYMmhR85x1ZK0uCyEEcl0rqM3GlkJXAmcCDyLKYKkqi6tqjVVtWbJwctGW6UkPcLN6yCpqp3A15Oc2jX9IrBndPIp4Fzg1qp6ELgHeBHw6ZEXKkmL2Hy7tHVwkq/23f9z4Dzgkm4C/XbgFQBVtT1J6I1MoBcgx1TV10dZsCQtdvMqSKpquhHSj06z/eP6lv+E3lyJJGmE5vWlLUnS/GeQSJKaGCSSpCYGiSSpiUEiSWoyrz61NQqrjl7G5Pq14y5Dkh4xHJFIkpoYJJKkJgaJJKmJQSJJamKQSJKaGCSSpCYGiSSpiUEiSWpikEiSmhgkkqQmBokkqYlBIklqYpBIkpoYJJKkJgaJJKmJQSJJamKQSJKaGCSSpCYGiSSpiUEiSWpikEiSmhww7gJGbeuOnUxccNW4y5Ckkdq+fu2c9e2IRJLUxCCRJDUxSCRJTQwSSVITg0SS1MQgkSQ1MUgkSU1mFCRJzkxSSX5kL9tcm2RNt/xPSQ6bYptDkrwjyW1JNnX7PKNbd+/+PghJ0vjMdERyDvDp7uc+VdWLquobU6z6K+Ae4LiqOhl4BbB8hjVIkuahfQZJkkOAZwGvBNb1tR+U5H1JvpjkCuCgvnXbkywf6OeJwDOAi6rqQYCquqOqrhrYLknenOTGJFuTnN21r0hyXZLN3bpTu/afSHJ9ks8leX9XryRpRGYyIjkD+EhVfQn4WpKTu/ZXAbuq6snAHwInT9dB53hgc1Xt3sd2PwusBk4Enge8OckK4BeAj1bVnnWbu7C6CHheVT0NmAReM9hhkvOTTCaZ3L1r5wwesiRppmbyXVvnABd3y+/r7m8CTgP+AqCqtiTZMqSangVc1gXOXUk+CZwCfBb46yTfB/xDVW1O8mzgKcBnkgAcCFw/2GFVXQpcCrB0xXE1pDolSewjSJIcAZwOrEpSwBKgkvzOfhzrJuDEJEtmMCp5mKq6LslpwFpgQ5I/B74OXF1VM5q7kSQN374ubZ0F/E1Vrayqiap6HHAHcCpwHb3LTSR5KnDC3jqqqtvoXXp6Q7rhQ5KJJINfSfkp4OwkS5IcSW/kc0OSlcBdVfVOepP2TwM2As9M8sNdf49J8qSZPnhJUrt9Bck5wBUDbR/s2t8OHJLki8Ab6V3u6jfVJaRfBn4Q2JbkRmADcPfANlcAW4AvAP8C/G5V/RfwHOALST4PnA1cXFX/DbwcuKy7tHY9MO1HlCVJw5eq4U4ZJFlCLxx+qKruH2rnQ7B0xXG14ry3jrsMSRqp1r9HkmRTVa2Zat1c/Gb7TcBfzccQkSQN39D/QmJVeWlJkhYRv2tLktTEIJEkNTFIJElNhj5HMt+tOnoZk42fXpAkfY8jEklSE4NEktTEIJEkNTFIJElNDBJJUhODRJLUxCCRJDUxSCRJTQwSSVITg0SS1GTof9hqvkvyTeCWcdcxheXA/4y7iClY18zNx5rAumbLuqa2sqqOnGrFovuuLeCW6f7K1zglmbSumZuPdc3HmsC6Zsu6Zs9LW5KkJgaJJKnJYgySS8ddwDSsa3bmY13zsSawrtmyrlladJPtkqThWowjEknSEBkkkqQmCz5IkrwwyS1JtiW5YIr1S5Nc3q3/tyQTfesu7NpvSfKCmfY5l3UleX6STUm2dj9P79vn2q7Pzd3tqBHVNJHk233HvaRvn5O7Wrcl+YskmU1NjXW9tK+mzUkeTLK6W9d0rmZY12lJPpfkgSRnDaw7L8mt3e28vvZRnK8p60qyOsn1SW5KsiXJ2X3rNiS5o+98rR5FTd263X3H/XBf+xO653tb9/wfOJuaWupK8tyB19Z3kpzZrWs6VzOs6zVJbu6ep2uSrOxbN2evrf1WVQv2BiwBbgOOBQ4EvgA8ZWCbVwOXdMvrgMu75ad02y8FntD1s2Qmfc5xXScBj+2Wnwrs6NvnWmDNGM7VBHDjNP3eAPwoEOCfgZ8cVV0D26wCbhvGuZpFXRPACcB7gLP62o8Abu9+Ht4tHz7C8zVdXU8CjuuWHwvcCRzW3d/Qv+2oaurW3TtNv38PrOuWLwFeNcq6Bp7Pe4CDW8/VLOp6bt/xXsX3/i3O2Wur5bbQRyRPB7ZV1e1V9V3gfcAZA9ucAby7W/4A8ONdUp8BvK+q7quqO4BtXX8z6XPO6qqqz1fVf3btNwEHJVk6y+MPtabpOkyyAji0qjZW75X8HuDMMdV1TrfvsOyzrqraXlVbgAcH9n0BcHVV3VNVXweuBl44qvM1XV1V9aWqurVb/k/gbmDK31QeVU3T6Z7f0+k939B7/kd2rgacBfxzVe2a5fFb6vpE3/E2Asd0y3P52tpvCz1Ijga+0nf/q13blNtU1QPATuAH9rLvTPqcy7r6vQT4XFXd19f2rm44/fuzHLq21vSEJJ9P8skkp/Zt/9V99DnXde1xNnDZQNv+nquZ1jXbfUd1vvYpydPpvRu+ra/5j7tLKW+Z5ZuX1poenWQyycY9l4/oPb/f6J7v/elzGHXtsY6Hv7b291ztT12vpDfC2Nu+w3ht7beFHiSPWEmOB94E/Gpf80urahVwanf7xRGVcyfw+Ko6CXgN8N4kh47o2PuU5BnArqq6sa95XOdq3uvevf4N8Iqq2vNO/ELgR4BT6F02ee0IS1pZva/++AXgrUmeOMJj71V3rlYBH+1rHtm5SnIusAZ481wdYxgWepDsAB7Xd/+Yrm3KbZIcACwDvraXfWfS51zWRZJjgCuAl1XV/79jrKod3c9vAu+lN0Se85q6y39f6469id672Cd12x/Tt//Iz1XnYe8YG8/VTOua7b6jOl/T6t4AXAW8rqo27mmvqjur5z7gXQz/tTWtvufqdnpzWyfRe34P657vWfc5jLo6Pw9cUVX399Xbcq5mXFeS5wGvA36676rEXL629t+oJmPm4kbvSydvpzdZvmfS6viBbX6dh07U/n23fDwPnWy/nd4k2D77nOO6Duu2/9kp+lzeLX8fvWvHvzaimo4ElnTLx9J7gR5RU0/wvWhU56q7/6iunmOHda5mWlfftht4+GT7HfQmQw/vlkd2vvZS14HANcBvTrHtiu5ngLcC60dU0+HA0m55OXAr3cQz8H4eOtn+6lGdq772jcBzh3WuZvGaP4neG7bjBtrn7LXVchvJQeb0AcCLgC91J/11Xdsb6aU4wKO7F+S27kT3/4fzum6/W+j7hMNUfY6qLuAi4FvA5r7bUcBjgE3AFnqT8BfT/ec+gppe0h1zM/A54Kf6+lwD3Nj1+Ta6b0sY4XP4HGDjQH/N52qGdZ1C71r0t+i9g76pb99f6urdRu8S0ijP15R1AecC9w+8tlZ36/4F2NrV9rfAISOq6ce6436h+/nKvj6P7Z7vbd3zv3TEz+EEvTcpjxros+lczbCujwN39T1PHx7Fa2t/b35FiiSpyUKfI5EkjZlBIklqYpBIkpoYJJKkJgaJJKmJQSJJamKQSJKa/B+F5Wxm0zEOXgAAAABJRU5ErkJggg==\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 576x432 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(feat_imp.nlargest(10))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tHxn8HuGyAyM",
        "outputId": "97aaba6b-74eb-4b1c-9d72-55463b60043c"
      },
      "execution_count": 269,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Adj Close    0.211103\n",
            "Low          0.199847\n",
            "Open         0.198193\n",
            "High         0.197004\n",
            "Volume       0.193853\n",
            "dtype: float32\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "-----------------------"
      ],
      "metadata": {
        "id": "n9rsNXA-wsmU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "dsyBPUdSksST",
        "outputId": "53fd4d69-76c0-4704-d1d5-4dec27614c50"
      },
      "execution_count": 270,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Open        High         Low       Close   Adj Close  \\\n",
              "count  980.000000  980.000000  980.000000  980.000000  980.000000   \n",
              "mean    93.453010   94.506919   92.466048   93.500752   93.500752   \n",
              "std     30.995042   31.279238   30.638583   30.934131   30.934131   \n",
              "min     50.828499   52.374500   50.676800   50.803001   50.803001   \n",
              "25%     63.819749   64.681250   63.306939   64.126749   64.126749   \n",
              "50%     87.703251   88.661751   87.013001   87.677750   87.677750   \n",
              "75%    119.630247  120.939253  118.189751  119.650123  119.650123   \n",
              "max    151.863495  152.100006  149.887497  150.709000  150.709000   \n",
              "\n",
              "             Volume  \n",
              "count  9.800000e+02  \n",
              "mean   3.021579e+07  \n",
              "std    1.318145e+07  \n",
              "min    6.936000e+06  \n",
              "25%    2.185300e+07  \n",
              "50%    2.708200e+07  \n",
              "75%    3.416150e+07  \n",
              "max    1.241400e+08  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e34fa287-30b5-4cbc-b027-226cff33d4cd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Adj Close</th>\n",
              "      <th>Volume</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>980.000000</td>\n",
              "      <td>980.000000</td>\n",
              "      <td>980.000000</td>\n",
              "      <td>980.000000</td>\n",
              "      <td>980.000000</td>\n",
              "      <td>9.800000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>93.453010</td>\n",
              "      <td>94.506919</td>\n",
              "      <td>92.466048</td>\n",
              "      <td>93.500752</td>\n",
              "      <td>93.500752</td>\n",
              "      <td>3.021579e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>30.995042</td>\n",
              "      <td>31.279238</td>\n",
              "      <td>30.638583</td>\n",
              "      <td>30.934131</td>\n",
              "      <td>30.934131</td>\n",
              "      <td>1.318145e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>50.828499</td>\n",
              "      <td>52.374500</td>\n",
              "      <td>50.676800</td>\n",
              "      <td>50.803001</td>\n",
              "      <td>50.803001</td>\n",
              "      <td>6.936000e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>63.819749</td>\n",
              "      <td>64.681250</td>\n",
              "      <td>63.306939</td>\n",
              "      <td>64.126749</td>\n",
              "      <td>64.126749</td>\n",
              "      <td>2.185300e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>87.703251</td>\n",
              "      <td>88.661751</td>\n",
              "      <td>87.013001</td>\n",
              "      <td>87.677750</td>\n",
              "      <td>87.677750</td>\n",
              "      <td>2.708200e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>119.630247</td>\n",
              "      <td>120.939253</td>\n",
              "      <td>118.189751</td>\n",
              "      <td>119.650123</td>\n",
              "      <td>119.650123</td>\n",
              "      <td>3.416150e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>151.863495</td>\n",
              "      <td>152.100006</td>\n",
              "      <td>149.887497</td>\n",
              "      <td>150.709000</td>\n",
              "      <td>150.709000</td>\n",
              "      <td>1.241400e+08</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e34fa287-30b5-4cbc-b027-226cff33d4cd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e34fa287-30b5-4cbc-b027-226cff33d4cd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e34fa287-30b5-4cbc-b027-226cff33d4cd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 270
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p-lWQDVdkuhi",
        "outputId": "6ac93474-caa0-4bec-b466-9a0c4b3dd079"
      },
      "execution_count": 271,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 980 entries, 2019-01-02 to 2022-11-18\n",
            "Data columns (total 6 columns):\n",
            " #   Column     Non-Null Count  Dtype  \n",
            "---  ------     --------------  -----  \n",
            " 0   Open       980 non-null    float64\n",
            " 1   High       980 non-null    float64\n",
            " 2   Low        980 non-null    float64\n",
            " 3   Close      980 non-null    float64\n",
            " 4   Adj Close  980 non-null    float64\n",
            " 5   Volume     980 non-null    int64  \n",
            "dtypes: float64(5), int64(1)\n",
            "memory usage: 53.6+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Vẽ biểu đồ thể hiện giá cao nhất và thấp nhất trong ngày"
      ],
      "metadata": {
        "id": "zDSImnrfvJQh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.dates as mdates\n",
        "import matplotlib.pyplot as plt\n",
        "import datetime as dt\n",
        "\n",
        "plt.figure(figsize = (15,10))\n",
        "plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m-%d'))\n",
        "plt.gca().xaxis.set_major_locator(mdates.DayLocator(interval = 60))\n",
        "x_dates = [dt.datetime.strptime(d,'%Y-%m-%d').date() for d in df.index.values]\n",
        "\n",
        "plt.plot(x_dates, df['High'], label='High')\n",
        "plt.plot(x_dates, df['Low'], label='Low')\n",
        "plt.xlabel('Time Scale')\n",
        "plt.ylabel('Scaled USD')\n",
        "plt.legend()\n",
        "plt.gcf().autofmt_xdate()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 579
        },
        "id": "RrnN9MWUkyGt",
        "outputId": "ba7ac874-8dc5-410e-bc92-3e53c1481fca"
      },
      "execution_count": 272,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Biểu đồ giá mở của và đóng cửa"
      ],
      "metadata": {
        "id": "HlxrpxMnvWsY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.dates as mdates\n",
        "import matplotlib.pyplot as plt\n",
        "import datetime as dt\n",
        "\n",
        "plt.figure(figsize = (15,10))\n",
        "plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m-%d'))\n",
        "plt.gca().xaxis.set_major_locator(mdates.DayLocator(interval = 60))\n",
        "x_dates = [dt.datetime.strptime(d,'%Y-%m-%d').date() for d in df.index.values]\n",
        "\n",
        "plt.plot(x_dates, df['Open'], label='Open')\n",
        "plt.plot(x_dates, df['Close'], label='Close')\n",
        "plt.xlabel('Time Scale')\n",
        "plt.ylabel('Scaled USD')\n",
        "plt.legend()\n",
        "plt.gcf().autofmt_xdate()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 579
        },
        "id": "ThCopBcqk8Gz",
        "outputId": "5798e87c-54b8-4585-ed26-4a55900cd6fc"
      },
      "execution_count": 273,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train_df = df.sort_values(by=['Date']).copy()\n",
        "\n",
        "# Danh sách các tính năng được xem xét\n",
        "FEATURES = ['High', 'Low', 'Open', 'Close', 'Volume'\n",
        "           ]\n",
        "\n",
        "print('FEATURE LIST')\n",
        "print([f for f in FEATURES])\n",
        "\n",
        "# tạo data với FEATURES\n",
        "data = pd.DataFrame(train_df)\n",
        "data_filtered = data[FEATURES]\n",
        "\n",
        "# We add a prediction column and set dummy values to prepare the data for scaling\n",
        "# them cot 'prediction' de du doan\n",
        "data_filtered_ext = data_filtered.copy()\n",
        "data_filtered_ext['Prediction'] = data_filtered_ext['Close']\n",
        "\n",
        "# Print the tail of the dataframe\n",
        "data_filtered_ext.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 273
        },
        "id": "jxbPprXHS0YB",
        "outputId": "a096eea2-d36c-47f5-96fc-dc42d955b461"
      },
      "execution_count": 274,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "FEATURE LIST\n",
            "['High', 'Low', 'Open', 'Close', 'Volume']\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  High        Low       Open      Close    Volume  Prediction\n",
              "Date                                                                         \n",
              "2022-11-14   97.180000  95.112999  95.500000  96.029999  24170100   96.029999\n",
              "2022-11-15  100.419998  97.019997  98.669998  98.720001  31831000   98.720001\n",
              "2022-11-16   99.849998  97.902000  98.019997  98.989998  24660200   98.989998\n",
              "2022-11-17   99.480003  97.099998  97.180000  98.500000  21818700   98.500000\n",
              "2022-11-18   99.160004  96.739998  99.010002  97.800003  24959300   97.800003"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a0726725-d917-4d70-a57c-73fb72335938\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Open</th>\n",
              "      <th>Close</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Prediction</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2022-11-14</th>\n",
              "      <td>97.180000</td>\n",
              "      <td>95.112999</td>\n",
              "      <td>95.500000</td>\n",
              "      <td>96.029999</td>\n",
              "      <td>24170100</td>\n",
              "      <td>96.029999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-15</th>\n",
              "      <td>100.419998</td>\n",
              "      <td>97.019997</td>\n",
              "      <td>98.669998</td>\n",
              "      <td>98.720001</td>\n",
              "      <td>31831000</td>\n",
              "      <td>98.720001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-16</th>\n",
              "      <td>99.849998</td>\n",
              "      <td>97.902000</td>\n",
              "      <td>98.019997</td>\n",
              "      <td>98.989998</td>\n",
              "      <td>24660200</td>\n",
              "      <td>98.989998</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-17</th>\n",
              "      <td>99.480003</td>\n",
              "      <td>97.099998</td>\n",
              "      <td>97.180000</td>\n",
              "      <td>98.500000</td>\n",
              "      <td>21818700</td>\n",
              "      <td>98.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-18</th>\n",
              "      <td>99.160004</td>\n",
              "      <td>96.739998</td>\n",
              "      <td>99.010002</td>\n",
              "      <td>97.800003</td>\n",
              "      <td>24959300</td>\n",
              "      <td>97.800003</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0726725-d917-4d70-a57c-73fb72335938')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a0726725-d917-4d70-a57c-73fb72335938 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a0726725-d917-4d70-a57c-73fb72335938');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 274
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_filtered"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "sdiWZO10aL69",
        "outputId": "989c9b25-526d-4929-c4f5-3c2ba33949c7"
      },
      "execution_count": 275,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  High        Low       Open      Close    Volume\n",
              "Date                                                             \n",
              "2019-01-02   52.616001  50.785500  50.828499  52.292500  30652000\n",
              "2019-01-03   52.848999  50.703499  52.049999  50.803001  36822000\n",
              "2019-01-04   53.542000  51.370899  51.629501  53.535500  41878000\n",
              "2019-01-07   53.700001  52.737999  53.575001  53.419498  39638000\n",
              "2019-01-08   54.228001  53.026501  53.805500  53.813999  35298000\n",
              "...                ...        ...        ...        ...       ...\n",
              "2022-11-14   97.180000  95.112999  95.500000  96.029999  24170100\n",
              "2022-11-15  100.419998  97.019997  98.669998  98.720001  31831000\n",
              "2022-11-16   99.849998  97.902000  98.019997  98.989998  24660200\n",
              "2022-11-17   99.480003  97.099998  97.180000  98.500000  21818700\n",
              "2022-11-18   99.160004  96.739998  99.010002  97.800003  24959300\n",
              "\n",
              "[980 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dd6cd89d-97c2-407b-bc24-1dfe001c784f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Open</th>\n",
              "      <th>Close</th>\n",
              "      <th>Volume</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2019-01-02</th>\n",
              "      <td>52.616001</td>\n",
              "      <td>50.785500</td>\n",
              "      <td>50.828499</td>\n",
              "      <td>52.292500</td>\n",
              "      <td>30652000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-01-03</th>\n",
              "      <td>52.848999</td>\n",
              "      <td>50.703499</td>\n",
              "      <td>52.049999</td>\n",
              "      <td>50.803001</td>\n",
              "      <td>36822000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-01-04</th>\n",
              "      <td>53.542000</td>\n",
              "      <td>51.370899</td>\n",
              "      <td>51.629501</td>\n",
              "      <td>53.535500</td>\n",
              "      <td>41878000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-01-07</th>\n",
              "      <td>53.700001</td>\n",
              "      <td>52.737999</td>\n",
              "      <td>53.575001</td>\n",
              "      <td>53.419498</td>\n",
              "      <td>39638000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-01-08</th>\n",
              "      <td>54.228001</td>\n",
              "      <td>53.026501</td>\n",
              "      <td>53.805500</td>\n",
              "      <td>53.813999</td>\n",
              "      <td>35298000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-14</th>\n",
              "      <td>97.180000</td>\n",
              "      <td>95.112999</td>\n",
              "      <td>95.500000</td>\n",
              "      <td>96.029999</td>\n",
              "      <td>24170100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-15</th>\n",
              "      <td>100.419998</td>\n",
              "      <td>97.019997</td>\n",
              "      <td>98.669998</td>\n",
              "      <td>98.720001</td>\n",
              "      <td>31831000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-16</th>\n",
              "      <td>99.849998</td>\n",
              "      <td>97.902000</td>\n",
              "      <td>98.019997</td>\n",
              "      <td>98.989998</td>\n",
              "      <td>24660200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-17</th>\n",
              "      <td>99.480003</td>\n",
              "      <td>97.099998</td>\n",
              "      <td>97.180000</td>\n",
              "      <td>98.500000</td>\n",
              "      <td>21818700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-11-18</th>\n",
              "      <td>99.160004</td>\n",
              "      <td>96.739998</td>\n",
              "      <td>99.010002</td>\n",
              "      <td>97.800003</td>\n",
              "      <td>24959300</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>980 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd6cd89d-97c2-407b-bc24-1dfe001c784f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-dd6cd89d-97c2-407b-bc24-1dfe001c784f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-dd6cd89d-97c2-407b-bc24-1dfe001c784f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 275
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Các biến đầu vào là các biến đưa vào mạng neuron để dự đoán.\n",
        "\n",
        "- Một nguyên tắc chung là các biến đầu vào phải có giá trị nhỏ, có thể nằm trong khoảng 0-1 hoặc được chuẩn hóa với giá trị trung bình bằng 0 và độ lệch chuẩn (standard deviation) bằng 1. Các biến đầu vào có cần phải scaling hay không phụ thuộc vào từng bài toán cụ thể và từng biến cụ thể."
      ],
      "metadata": {
        "id": "kI1LWUkkFF2A"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "\n",
        "# Get the number of rows in the data\n",
        "nrows = data_filtered.shape[0]\n",
        "\n",
        "# Convert the data to numpy values\n",
        "np_data_unscaled = np.array(data_filtered)\n",
        "np_data = np.reshape(np_data_unscaled, (nrows, -1))\n",
        "print(np_data.shape)\n",
        "\n",
        "# transfrom data by scaling (0,1)\n",
        "scaler = MinMaxScaler()\n",
        "np_data_scaled = scaler.fit_transform(np_data_unscaled)\n",
        "\n",
        "# Creating a separate scaler that works on a single column for scaling predictions\n",
        "scaler_pred = MinMaxScaler()\n",
        "df_Close = pd.DataFrame(data_filtered_ext['Close'])\n",
        "np_Close_scaled = scaler_pred.fit_transform(df_Close)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c1u2_e8yTP1E",
        "outputId": "3606e4e2-4ea2-4dda-84a5-7fa263e9ad38"
      },
      "execution_count": 276,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(980, 5)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# xử lý đầu vào dữ liệu với 5 feature, dùng 50 dữ liệu dự đoán"
      ],
      "metadata": {
        "id": "cs2vpuHp2vok"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import math\n",
        "\n",
        "# Đặt độ dài chuỗi - đây là khung thời gian được sử dụng để đưa ra một dự đoán\n",
        "sequence_length = 50\n",
        "\n",
        "# Chỉ số dự đoán\n",
        "\n",
        "index_Close = data.columns.get_loc(\"Close\")\n",
        "\n",
        "# Tách dữ liệu đào tạo thành tập dữ liệu đào tạo và đào tạo \n",
        "# Bước đầu tiên, chúng tôi lấy số hàng để huấn luyện mô hình trên 80% dữ liệu\n",
        "\n",
        "train_data_len = math.ceil(np_data_scaled.shape[0] * 0.8)\n",
        "print(train_data_len)\n",
        "\n",
        "# Create the training and test data\n",
        "train_data = np_data_scaled[0:train_data_len, :]\n",
        "\n",
        "# print(train_data)\n",
        "test_data = np_data_scaled[train_data_len - sequence_length:, :]\n",
        "# print(\"-------\",test_data)\n",
        "\n",
        "# RNN [samples, time steps, features]\n",
        "# create N samples, sequence_length time steps per sample, and 6 features\n",
        "\n",
        "def partition_dataset(sequence_length, data):\n",
        "    x, y = [], []\n",
        "    data_len = data.shape[0]\n",
        "    for i in range(sequence_length, data_len):\n",
        "        x.append(data[i-sequence_length:i,:]) #contains sequence_length values 0-sequence_length * columsn\n",
        "        # print(x)\n",
        "        y.append(data[i, index_Close]) #contains the prediction values for validation,  for single-step prediction\n",
        "    \n",
        "    x = np.array(x)\n",
        "    y = np.array(y)\n",
        "    return x, y\n",
        "\n",
        "# Generate training&test\n",
        "x_train, y_train = partition_dataset(sequence_length, train_data)\n",
        "x_test, y_test = partition_dataset(sequence_length, test_data)\n",
        "\n",
        "print(x_train.shape, y_train.shape)\n",
        "print(\"---\")\n",
        "print(x_test.shape, y_test.shape)\n",
        "\n",
        "print(x_train[1][sequence_length-1][index_Close])\n",
        "print(y_train[0])\n"
      ],
      "metadata": {
        "id": "4pmQcnJfaEA-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8e7504e1-8228-4dd3-ed10-a4a350abb969"
      },
      "execution_count": 277,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "784\n",
            "(734, 50, 5) (734,)\n",
            "---\n",
            "(196, 50, 5) (196,)\n",
            "0.08427921330329724\n",
            "0.08427921330329724\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Dense\n",
        "from tensorflow.keras.layers import LSTM\n",
        "from tensorflow.keras.layers import SimpleRNN\n",
        "from tensorflow.keras.layers import Dropout\n",
        "import time"
      ],
      "metadata": {
        "id": "i0xrCN5iy_42"
      },
      "execution_count": 278,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# RNN model\n",
        "1. Create Model\n",
        "2. Compile Model\n",
        "3. Fit the model"
      ],
      "metadata": {
        "id": "9G7x_nvG0jCM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# # Configure the neural network model_rnn\n",
        "# model_rnn = Sequential()\n",
        "\n",
        "# # model_rnn with n_neurons = inputshape Timestamps, each with x_train.shape[2] variables\n",
        "# n_neurons = x_train.shape[1] * x_train.shape[2]\n",
        "# print(n_neurons, x_train.shape[1], x_train.shape[2])\n",
        "# model_rnn.add(LSTM(n_neurons, return_sequences=True, input_shape=(x_train.shape[1], x_train.shape[2]))) \n",
        "# model_rnn.add(LSTM(n_neurons, return_sequences=False))\n",
        "# model_rnn.add(Dense(5))\n",
        "# model_rnn.add(Dense(1))\n",
        "\n",
        "# # Compile the model_rnn\n",
        "# model_rnn.compile(optimizer='adam', loss='mse')"
      ],
      "metadata": {
        "id": "WuNkOMdbI0pp"
      },
      "execution_count": 279,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # Build the LSTM model\n",
        "\n",
        "# model_rnn = Sequential()\n",
        "\n",
        "# # Model with n_neurons = inputshape Timestamps, each with x_train.shape[2] variables\n",
        "# # n_neurons = x_train.shape[1] * x_train.shape[2]\n",
        "\n",
        "# model_rnn.add(LSTM(128, return_sequences=True, input_shape= (x_train.shape[1], x_train.shape[2])))\n",
        "# model_rnn.add(LSTM(64, return_sequences=False))\n",
        "# model_rnn.add(Dense(25))\n",
        "# model_rnn.add(Dense(1))\n",
        "\n",
        "# # Compile the model\n",
        "# model_rnn.compile(optimizer='adam', loss='mean_squared_error')"
      ],
      "metadata": {
        "id": "gI0_6L4_0in5"
      },
      "execution_count": 280,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Configure the neural network model_rnn\n",
        "model_rnn = Sequential()\n",
        "\n",
        "\n",
        "\n",
        "# model_rnn with n_neurons = inputshape Timestamps, each with x_train.shape[2] variables\n",
        "n_neurons = x_train.shape[1] * x_train.shape[2]\n",
        "\n",
        "\n",
        "model_rnn.add(SimpleRNN(n_neurons, return_sequences = True, input_shape = (x_train.shape[1], x_train.shape[2])))\n",
        "model_rnn.add(SimpleRNN(n_neurons, return_sequences = False))\n",
        "\n",
        "model_rnn.add(Dense(5))\n",
        "model_rnn.add(Dense(1))\n",
        "\n",
        "model_rnn.compile(optimizer='adam', loss='mse')\n"
      ],
      "metadata": {
        "id": "JmnlCvrA1sY9"
      },
      "execution_count": 281,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "- fit model"
      ],
      "metadata": {
        "id": "J1bCxIYR2iFM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "epochs = 50\n",
        "batch_size = 16\n",
        "\n",
        "#testing Time\n",
        "StartTime=time.time()\n",
        "history = model_rnn.fit(x_train, y_train, \n",
        "                    batch_size=batch_size, \n",
        "                    epochs=epochs,\n",
        "                    validation_data=(x_test, y_test)\n",
        "                   )\n",
        "EndTime=time.time()\n",
        "\n",
        "print(\"############### Total Time Taken: \", EndTime-StartTime, 's #############')\n",
        "\n",
        "# model_rnn.fit(x_train,y_train,epochs = 5, batch_size = 32)"
      ],
      "metadata": {
        "id": "QGzeP-NM1kN0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7db3ae61-1692-4e5f-d3a5-2e7f7503629b"
      },
      "execution_count": 282,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "46/46 [==============================] - 4s 59ms/step - loss: 0.5481 - val_loss: 0.0018\n",
            "Epoch 2/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0012 - val_loss: 0.0013\n",
            "Epoch 3/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0011 - val_loss: 0.0014\n",
            "Epoch 4/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 7.5060e-04 - val_loss: 0.0015\n",
            "Epoch 5/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 7.9870e-04 - val_loss: 0.0016\n",
            "Epoch 6/50\n",
            "46/46 [==============================] - 3s 55ms/step - loss: 0.0020 - val_loss: 0.0013\n",
            "Epoch 7/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 0.0015 - val_loss: 0.0012\n",
            "Epoch 8/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 9.7841e-04 - val_loss: 0.0018\n",
            "Epoch 9/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0011 - val_loss: 0.0015\n",
            "Epoch 10/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0022 - val_loss: 0.0014\n",
            "Epoch 11/50\n",
            "46/46 [==============================] - 2s 52ms/step - loss: 0.0011 - val_loss: 0.0012\n",
            "Epoch 12/50\n",
            "46/46 [==============================] - 2s 52ms/step - loss: 0.0035 - val_loss: 0.0013\n",
            "Epoch 13/50\n",
            "46/46 [==============================] - 2s 52ms/step - loss: 0.0047 - val_loss: 0.0084\n",
            "Epoch 14/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 0.0034 - val_loss: 0.0012\n",
            "Epoch 15/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0020 - val_loss: 0.0036\n",
            "Epoch 16/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 0.0040 - val_loss: 0.0082\n",
            "Epoch 17/50\n",
            "46/46 [==============================] - 2s 52ms/step - loss: 0.0023 - val_loss: 0.0011\n",
            "Epoch 18/50\n",
            "46/46 [==============================] - 3s 55ms/step - loss: 0.0011 - val_loss: 0.0015\n",
            "Epoch 19/50\n",
            "46/46 [==============================] - 3s 55ms/step - loss: 8.5666e-04 - val_loss: 0.0013\n",
            "Epoch 20/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 0.0019 - val_loss: 0.0019\n",
            "Epoch 21/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 9.7993e-04 - val_loss: 0.0021\n",
            "Epoch 22/50\n",
            "46/46 [==============================] - 3s 55ms/step - loss: 0.0028 - val_loss: 0.0050\n",
            "Epoch 23/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0021 - val_loss: 0.0016\n",
            "Epoch 24/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0025 - val_loss: 0.0014\n",
            "Epoch 25/50\n",
            "46/46 [==============================] - 3s 55ms/step - loss: 0.0014 - val_loss: 9.8899e-04\n",
            "Epoch 26/50\n",
            "46/46 [==============================] - 3s 56ms/step - loss: 0.0025 - val_loss: 0.0029\n",
            "Epoch 27/50\n",
            "46/46 [==============================] - 3s 55ms/step - loss: 0.0016 - val_loss: 0.0089\n",
            "Epoch 28/50\n",
            "46/46 [==============================] - 3s 54ms/step - loss: 0.0017 - val_loss: 0.0016\n",
            "Epoch 29/50\n",
            "46/46 [==============================] - 3s 54ms/step - loss: 0.0010 - val_loss: 0.0011\n",
            "Epoch 30/50\n",
            "46/46 [==============================] - 3s 59ms/step - loss: 6.6217e-04 - val_loss: 0.0038\n",
            "Epoch 31/50\n",
            "46/46 [==============================] - 3s 55ms/step - loss: 0.0017 - val_loss: 0.0011\n",
            "Epoch 32/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0013 - val_loss: 0.0018\n",
            "Epoch 33/50\n",
            "46/46 [==============================] - 3s 56ms/step - loss: 0.0015 - val_loss: 0.0011\n",
            "Epoch 34/50\n",
            "46/46 [==============================] - 3s 56ms/step - loss: 0.0021 - val_loss: 0.0021\n",
            "Epoch 35/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0045 - val_loss: 0.0022\n",
            "Epoch 36/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 0.0014 - val_loss: 0.0010\n",
            "Epoch 37/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 9.2352e-04 - val_loss: 9.9048e-04\n",
            "Epoch 38/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 0.0010 - val_loss: 0.0010\n",
            "Epoch 39/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0013 - val_loss: 0.0011\n",
            "Epoch 40/50\n",
            "46/46 [==============================] - 3s 55ms/step - loss: 0.0012 - val_loss: 0.0019\n",
            "Epoch 41/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0011 - val_loss: 0.0011\n",
            "Epoch 42/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0011 - val_loss: 0.0010\n",
            "Epoch 43/50\n",
            "46/46 [==============================] - 3s 57ms/step - loss: 0.0055 - val_loss: 0.0068\n",
            "Epoch 44/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0019 - val_loss: 0.0012\n",
            "Epoch 45/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 0.0010 - val_loss: 0.0010\n",
            "Epoch 46/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0012 - val_loss: 0.0063\n",
            "Epoch 47/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0011 - val_loss: 9.3577e-04\n",
            "Epoch 48/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 9.0159e-04 - val_loss: 9.3557e-04\n",
            "Epoch 49/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0035 - val_loss: 0.0089\n",
            "Epoch 50/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0021 - val_loss: 0.0027\n",
            "############### Total Time Taken:  143.38412141799927 s #############\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Biểu đồ độ loss"
      ],
      "metadata": {
        "id": "To7NxfEi2D4X"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot training & validation loss values\n",
        "fig, ax = plt.subplots(figsize=(16, 5), sharex=True)\n",
        "sns.lineplot(data=history.history[\"loss\"])\n",
        "plt.title(\"Model loss\")\n",
        "plt.ylabel(\"Loss\")\n",
        "plt.xlabel(\"Epoch\")\n",
        "ax.xaxis.set_major_locator(plt.MaxNLocator(epochs))\n",
        "plt.legend([\"Train\", \"Test\"], loc=\"upper left\")\n",
        "plt.grid()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "id": "mAMB-SEJ2zrQ",
        "outputId": "0457005e-e47c-4acf-b7b4-92a2c849e9fc"
      },
      "execution_count": 283,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Đo độ chính xác model."
      ],
      "metadata": {
        "id": "2xeBLZOB3B5Y"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# Get the predicted values\n",
        "StartTime=time.time()\n",
        "y_pred_scaled = model_rnn.predict(x_test)\n",
        "EndTime=time.time()\n",
        "\n",
        "print(\"############### Total Time Taken: \",EndTime-StartTime, 's #############')\n",
        "\n",
        "# Unscale the predicted values\n",
        "y_pred = scaler_pred.inverse_transform(y_pred_scaled)\n",
        "y_test_unscaled = scaler_pred.inverse_transform(y_test.reshape(-1, 1))\n",
        "\n",
        "#Acurracy score\n",
        "# print(y_test_unscaled)\n",
        "# print(y_pred)\n",
        "\n",
        "# Mean Absolute Error (MAE)\n",
        "MAE = mean_absolute_error(y_test_unscaled, y_pred)\n",
        "print(f'Median Absolute Error (MAE): {np.round(MAE, 2)}')\n",
        "\n",
        "# Mean Absolute Percentage Error (MAPE)\n",
        "MAPE = np.mean((np.abs(np.subtract(y_test_unscaled, y_pred)/ y_test_unscaled))) * 100\n",
        "print(f'Mean Absolute Percentage Error (MAPE): {np.round(MAPE, 2)} %')\n",
        "\n",
        "# Median Absolute Percentage Error (MDAPE)\n",
        "MDAPE = np.median((np.abs(np.subtract(y_test_unscaled, y_pred)/ y_test_unscaled)) ) * 100\n",
        "print(f'Median Absolute Percentage Error (MDAPE): {np.round(MDAPE, 2)} %')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Cv4DWND4233M",
        "outputId": "c525ee98-4a6d-4425-802d-5b6f156c2a34"
      },
      "execution_count": 284,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "7/7 [==============================] - 0s 28ms/step\n",
            "############### Total Time Taken:  0.5919499397277832 s #############\n",
            "Median Absolute Error (MAE): 4.37\n",
            "Mean Absolute Percentage Error (MAPE): 3.86 %\n",
            "Median Absolute Percentage Error (MDAPE): 3.63 %\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(y_pred, color = 'red',label = 'Real TATA Stock Price')\n",
        "plt.plot(y_test_unscaled, color= 'blue',label = 'Predicted TAT Stock Price')\n",
        "plt.title('TATA Stock Price Predicion')\n",
        "plt.xlabel('Time')\n",
        "plt.ylabel('TATA Stock Price')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "Y6pfCFzS3Agl",
        "outputId": "054436e2-cebc-469c-9ce4-c3a591ac57ca"
      },
      "execution_count": 285,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Overfitting RNN model"
      ],
      "metadata": {
        "id": "yXXJEa2Y3LH8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "epochs = 50\n",
        "batch_size = 16\n",
        "early_stop = EarlyStopping(monitor='loss', patience=5, verbose=1)\n",
        "StartTime=time.time()\n",
        "history = model_rnn.fit(x_train, y_train, \n",
        "                    batch_size=batch_size, \n",
        "                    epochs=epochs,\n",
        "                    validation_data=(x_test, y_test),\n",
        "                    callbacks=[early_stop]\n",
        "                   )\n",
        "EndTime=time.time()\n",
        "\n",
        "print(\"############### Total Time Taken: \",EndTime-StartTime, 's #############')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Gx_iCP1l3O7a",
        "outputId": "2f13656e-9367-48e8-bb8c-94949b57f598"
      },
      "execution_count": 286,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "46/46 [==============================] - 3s 55ms/step - loss: 9.4108e-04 - val_loss: 9.2055e-04\n",
            "Epoch 2/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0021 - val_loss: 0.0019\n",
            "Epoch 3/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 0.0026 - val_loss: 0.0071\n",
            "Epoch 4/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 0.0030 - val_loss: 0.0031\n",
            "Epoch 5/50\n",
            "46/46 [==============================] - 2s 53ms/step - loss: 0.0011 - val_loss: 0.0027\n",
            "Epoch 6/50\n",
            "46/46 [==============================] - 2s 54ms/step - loss: 0.0013 - val_loss: 0.0014\n",
            "Epoch 6: early stopping\n",
            "############### Total Time Taken:  15.952941656112671 s #############\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot training & validation loss values\n",
        "fig, ax = plt.subplots(figsize=(16, 5), sharex=True)\n",
        "sns.lineplot(data=history.history[\"loss\"])\n",
        "plt.title(\"Model loss\")\n",
        "plt.ylabel(\"Loss\")\n",
        "plt.xlabel(\"Epoch\")\n",
        "ax.xaxis.set_major_locator(plt.MaxNLocator(epochs))\n",
        "plt.legend([\"Train\", \"Test\"], loc=\"upper left\")\n",
        "plt.grid()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "uK1ukRug3hVE",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "outputId": "bec22dc0-6000-4f4f-dc94-660993ced389"
      },
      "execution_count": 287,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x360 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Độ chính xác sau khi overfitting"
      ],
      "metadata": {
        "id": "XmsxdhTa3NWE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# Get the predicted values\n",
        "y_pred_scaled = model_rnn.predict(x_test)\n",
        "\n",
        "# Unscale the predicted values\n",
        "y_pred = scaler_pred.inverse_transform(y_pred_scaled)\n",
        "y_test_unscaled = scaler_pred.inverse_transform(y_test.reshape(-1, 1))\n",
        "\n",
        "#Acurracy score\n",
        "# print(y_test_unscaled)\n",
        "# print(y_pred)\n",
        "\n",
        "# Mean Absolute Error (MAE)\n",
        "MAE = mean_absolute_error(y_test_unscaled, y_pred)\n",
        "print(f'Median Absolute Error (MAE): {np.round(MAE, 2)}')\n",
        "\n",
        "# Mean Absolute Percentage Error (MAPE)\n",
        "MAPE = np.mean((np.abs(np.subtract(y_test_unscaled, y_pred)/ y_test_unscaled))) * 100\n",
        "print(f'Mean Absolute Percentage Error (MAPE): {np.round(MAPE, 2)} %')\n",
        "\n",
        "# Median Absolute Percentage Error (MDAPE)\n",
        "MDAPE = np.median((np.abs(np.subtract(y_test_unscaled, y_pred)/ y_test_unscaled)) ) * 100\n",
        "print(f'Median Absolute Percentage Error (MDAPE): {np.round(MDAPE, 2)} %')\n",
        "\n",
        "R2 = r2_score(y_test_unscaled, y_pred)\n",
        "print(f'R Squared (R2): {np.round(R2, 2)}')"
      ],
      "metadata": {
        "id": "Rs2EO2xs3pDm",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c5eaeef3-eb77-46ac-bcc8-63860bd5ff61"
      },
      "execution_count": 288,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "7/7 [==============================] - 0s 25ms/step\n",
            "Median Absolute Error (MAE): 2.99\n",
            "Mean Absolute Percentage Error (MAPE): 2.64 %\n",
            "Median Absolute Percentage Error (MDAPE): 2.23 %\n",
            "R Squared (R2): 0.93\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# score = model_rnn.evaluate(x_test, y_test,  batch_size=128)\n",
        "# print(score)"
      ],
      "metadata": {
        "id": "A9vvzg0TsIR_"
      },
      "execution_count": 289,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(y_pred, color = 'red',label = 'Real TATA Stock Price')\n",
        "plt.plot(y_test_unscaled, color= 'blue',label = 'Predicted TAT Stock Price')\n",
        "plt.title('TATA Stock Price Predicion')\n",
        "plt.xlabel('Time')\n",
        "plt.ylabel('TATA Stock Price')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "ddsV9nzi3rt6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "b997b6bf-4ba6-450e-c66d-67adc934e146"
      },
      "execution_count": 290,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Multi Layer Perceptrons"
      ],
      "metadata": {
        "id": "Y_HPKQXIL_fV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# MLP \n",
        "model_MLP = tf.keras.models.Sequential([\n",
        "  tf.keras.layers.Flatten(input_shape = (50,5)),\n",
        "  tf.keras.layers.Dense(128, activation='relu'),\n",
        "  tf.keras.layers.Dropout(0.2),\n",
        "  tf.keras.layers.Dense(1)\n",
        "])"
      ],
      "metadata": {
        "id": "8CZMg1LsMHZF"
      },
      "execution_count": 291,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#MLPs compile model\n",
        "model_MLP.compile(optimizer='adam',\n",
        "              loss='mae')"
      ],
      "metadata": {
        "id": "is9jtDzHMIbd"
      },
      "execution_count": 292,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "epochs = 50\n",
        "batch_size = 16\n",
        "early_stop = EarlyStopping(monitor='loss', patience=5, verbose=1)\n",
        "history = model_MLP.fit(x_train, y_train, \n",
        "                    batch_size=batch_size, \n",
        "                    epochs=epochs,\n",
        "                    validation_data=(x_test, y_test)\n",
        "                   )"
      ],
      "metadata": {
        "id": "-OgEyhNtMNa_",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e1c2a82c-a68f-46da-fa8e-610ca960aab2"
      },
      "execution_count": 293,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "46/46 [==============================] - 1s 5ms/step - loss: 0.1712 - val_loss: 0.1448\n",
            "Epoch 2/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0791 - val_loss: 0.0619\n",
            "Epoch 3/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0601 - val_loss: 0.0587\n",
            "Epoch 4/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0533 - val_loss: 0.0623\n",
            "Epoch 5/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0562 - val_loss: 0.0566\n",
            "Epoch 6/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0514 - val_loss: 0.0419\n",
            "Epoch 7/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0488 - val_loss: 0.0466\n",
            "Epoch 8/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0563 - val_loss: 0.0557\n",
            "Epoch 9/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0508 - val_loss: 0.0420\n",
            "Epoch 10/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0510 - val_loss: 0.0460\n",
            "Epoch 11/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0476 - val_loss: 0.0563\n",
            "Epoch 12/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0516 - val_loss: 0.0545\n",
            "Epoch 13/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0415 - val_loss: 0.0403\n",
            "Epoch 14/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0462 - val_loss: 0.0417\n",
            "Epoch 15/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0477 - val_loss: 0.0423\n",
            "Epoch 16/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0476 - val_loss: 0.0491\n",
            "Epoch 17/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0462 - val_loss: 0.0440\n",
            "Epoch 18/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0442 - val_loss: 0.0395\n",
            "Epoch 19/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0438 - val_loss: 0.0398\n",
            "Epoch 20/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0448 - val_loss: 0.0486\n",
            "Epoch 21/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0449 - val_loss: 0.0529\n",
            "Epoch 22/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0457 - val_loss: 0.0393\n",
            "Epoch 23/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0469 - val_loss: 0.0395\n",
            "Epoch 24/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0442 - val_loss: 0.0495\n",
            "Epoch 25/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0408 - val_loss: 0.0402\n",
            "Epoch 26/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0418 - val_loss: 0.0408\n",
            "Epoch 27/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0409 - val_loss: 0.0541\n",
            "Epoch 28/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0450 - val_loss: 0.0394\n",
            "Epoch 29/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0424 - val_loss: 0.0443\n",
            "Epoch 30/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0398 - val_loss: 0.0403\n",
            "Epoch 31/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0396 - val_loss: 0.0388\n",
            "Epoch 32/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0419 - val_loss: 0.0401\n",
            "Epoch 33/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0408 - val_loss: 0.0416\n",
            "Epoch 34/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0411 - val_loss: 0.0433\n",
            "Epoch 35/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0411 - val_loss: 0.0402\n",
            "Epoch 36/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0379 - val_loss: 0.0417\n",
            "Epoch 37/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0396 - val_loss: 0.0523\n",
            "Epoch 38/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0389 - val_loss: 0.0403\n",
            "Epoch 39/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0398 - val_loss: 0.0399\n",
            "Epoch 40/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0404 - val_loss: 0.0409\n",
            "Epoch 41/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0418 - val_loss: 0.0696\n",
            "Epoch 42/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0410 - val_loss: 0.0415\n",
            "Epoch 43/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0396 - val_loss: 0.0758\n",
            "Epoch 44/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0418 - val_loss: 0.0397\n",
            "Epoch 45/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0430 - val_loss: 0.0555\n",
            "Epoch 46/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0377 - val_loss: 0.0385\n",
            "Epoch 47/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0428 - val_loss: 0.0488\n",
            "Epoch 48/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0375 - val_loss: 0.0426\n",
            "Epoch 49/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0381 - val_loss: 0.0383\n",
            "Epoch 50/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0440 - val_loss: 0.0418\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot training & validation loss values\n",
        "fig, ax = plt.subplots(figsize=(16, 5), sharex=True)\n",
        "sns.lineplot(data=history.history[\"loss\"])\n",
        "plt.title(\"Model loss\")\n",
        "plt.ylabel(\"Loss\")\n",
        "plt.xlabel(\"Epoch\")\n",
        "ax.xaxis.set_major_locator(plt.MaxNLocator(epochs))\n",
        "plt.legend([\"Train\", \"Test\"], loc=\"upper left\")\n",
        "plt.grid()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "rmeyNYSuMPBW",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "outputId": "ada60748-778b-4a34-b6aa-1f26281f5a41"
      },
      "execution_count": 294,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x360 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Get the predicted values\n",
        "y_pred_scaled = model_MLP.predict(x_test)\n",
        "\n",
        "# Unscale the predicted values\n",
        "y_pred = scaler_pred.inverse_transform(y_pred_scaled)\n",
        "y_test_unscaled = scaler_pred.inverse_transform(y_test.reshape(-1, 1))\n",
        "\n",
        "#Acurracy score\n",
        "# print(y_test_unscaled)\n",
        "# print(y_pred)\n",
        "\n",
        "# Mean Absolute Error (MAE)\n",
        "MAE = mean_absolute_error(y_test_unscaled, y_pred)\n",
        "print(f'Median Absolute Error (MAE): {np.round(MAE, 2)}')\n",
        "\n",
        "# Mean Absolute Percentage Error (MAPE)\n",
        "MAPE = np.mean((np.abs(np.subtract(y_test_unscaled, y_pred)/ y_test_unscaled))) * 100\n",
        "print(f'Mean Absolute Percentage Error (MAPE): {np.round(MAPE, 2)} %')\n",
        "\n",
        "# Median Absolute Percentage Error (MDAPE)\n",
        "MDAPE = np.median((np.abs(np.subtract(y_test_unscaled, y_pred)/ y_test_unscaled)) ) * 100\n",
        "print(f'Median Absolute Percentage Error (MDAPE): {np.round(MDAPE, 2)} %')\n"
      ],
      "metadata": {
        "id": "6id587p1MQWx",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "981fe14b-0782-4f0e-c4c8-33a57aa32a5b"
      },
      "execution_count": 295,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "7/7 [==============================] - 0s 2ms/step\n",
            "Median Absolute Error (MAE): 4.18\n",
            "Mean Absolute Percentage Error (MAPE): 3.57 %\n",
            "Median Absolute Percentage Error (MDAPE): 3.11 %\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "OVERFITTING FOR MLP."
      ],
      "metadata": {
        "id": "o0SCcsmXMYo9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "epochs = 50\n",
        "batch_size = 16\n",
        "early_stop = EarlyStopping(monitor='loss', patience=5, verbose=1)\n",
        "history = model_MLP.fit(x_train, y_train, \n",
        "                    batch_size=batch_size, \n",
        "                    epochs=epochs,\n",
        "                    validation_data=(x_test, y_test),\n",
        "                    callbacks=[early_stop]\n",
        "                   )"
      ],
      "metadata": {
        "id": "wmE6tV9uMToI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "01dad1ad-dbce-461d-b9b3-92e29eebfb40"
      },
      "execution_count": 296,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0364 - val_loss: 0.0386\n",
            "Epoch 2/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0387 - val_loss: 0.0398\n",
            "Epoch 3/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0360 - val_loss: 0.0380\n",
            "Epoch 4/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0364 - val_loss: 0.0381\n",
            "Epoch 5/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0377 - val_loss: 0.0437\n",
            "Epoch 6/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0386 - val_loss: 0.0385\n",
            "Epoch 7/50\n",
            "46/46 [==============================] - 0s 2ms/step - loss: 0.0380 - val_loss: 0.0404\n",
            "Epoch 8/50\n",
            "46/46 [==============================] - 0s 3ms/step - loss: 0.0364 - val_loss: 0.0618\n",
            "Epoch 8: early stopping\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot training & validation loss values\n",
        "fig, ax = plt.subplots(figsize=(16, 5), sharex=True)\n",
        "sns.lineplot(data=history.history[\"loss\"])\n",
        "plt.title(\"Model loss\")\n",
        "plt.ylabel(\"Loss\")\n",
        "plt.xlabel(\"Epoch\")\n",
        "ax.xaxis.set_major_locator(plt.MaxNLocator(epochs))\n",
        "plt.legend([\"Train\", \"Test\"], loc=\"upper left\")\n",
        "plt.grid()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "G8GCkAPfMfEc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "outputId": "d2bfe926-14ce-4e20-a6f4-2844274d0301"
      },
      "execution_count": 297,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "CJmypLUVsEvx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(x_test)"
      ],
      "metadata": {
        "id": "iPCV4CgosHTT",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ae4fb7f0-e5e1-459b-eb05-beca818ef7de"
      },
      "execution_count": 298,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[[0.94513428 0.9211627  0.93652458 0.91735227 0.2956725 ]\n",
            "  [0.94383724 0.91545774 0.92427375 0.90900442 0.18378212]\n",
            "  [0.9255456  0.91023647 0.90063354 0.93060982 0.12212894]\n",
            "  ...\n",
            "  [0.91723773 0.88722494 0.91929039 0.88217929 0.32143954]\n",
            "  [0.87703337 0.86881963 0.87259624 0.8849318  0.23309785]\n",
            "  [0.90048184 0.90413838 0.89099076 0.90735294 0.18507901]]\n",
            "\n",
            " [[0.94383724 0.91545774 0.92427375 0.90900442 0.18378212]\n",
            "  [0.9255456  0.91023647 0.90063354 0.93060982 0.12212894]\n",
            "  [0.93094035 0.91192983 0.92707481 0.91803788 0.16852667]\n",
            "  ...\n",
            "  [0.87703337 0.86881963 0.87259624 0.8849318  0.23309785]\n",
            "  [0.90048184 0.90413838 0.89099076 0.90735294 0.18507901]\n",
            "  [0.89301628 0.88068329 0.87763156 0.87882102 0.22253507]]\n",
            "\n",
            " [[0.9255456  0.91023647 0.90063354 0.93060982 0.12212894]\n",
            "  [0.93094035 0.91192983 0.92707481 0.91803788 0.16852667]\n",
            "  [0.92230167 0.9068599  0.91795427 0.9308099  0.1302174 ]\n",
            "  ...\n",
            "  [0.90048184 0.90413838 0.89099076 0.90735294 0.18507901]\n",
            "  [0.89301628 0.88068329 0.87763156 0.87882102 0.22253507]\n",
            "  [0.87147965 0.83268942 0.87020839 0.83405406 0.27193611]]\n",
            "\n",
            " ...\n",
            "\n",
            " [[0.58776837 0.57391188 0.563483   0.59733152 0.13695096]\n",
            "  [0.58365712 0.57839729 0.57753752 0.58672149 0.12563308]\n",
            "  [0.59789619 0.59795165 0.58614843 0.61034371 0.1262491 ]\n",
            "  ...\n",
            "  [0.45109323 0.43829149 0.43431981 0.45970214 0.20136258]\n",
            "  [0.44928827 0.44789726 0.44213889 0.45269552 0.14704362]\n",
            "  [0.48177743 0.46711895 0.47351414 0.47962085 0.21240743]]\n",
            "\n",
            " [[0.58365712 0.57839729 0.57753752 0.58672149 0.12563308]\n",
            "  [0.59789619 0.59795165 0.58614843 0.61034371 0.1262491 ]\n",
            "  [0.6043138  0.60732564 0.60534965 0.6112446  0.10918484]\n",
            "  ...\n",
            "  [0.44928827 0.44789726 0.44213889 0.45269552 0.14704362]\n",
            "  [0.48177743 0.46711895 0.47351414 0.47962085 0.21240743]\n",
            "  [0.47606174 0.47600915 0.46708071 0.48232336 0.15122521]]\n",
            "\n",
            " [[0.59789619 0.59795165 0.58614843 0.61034371 0.1262491 ]\n",
            "  [0.6043138  0.60732564 0.60534965 0.6112446  0.10918484]\n",
            "  [0.57152383 0.54755386 0.57466722 0.54558282 0.22250947]\n",
            "  ...\n",
            "  [0.48177743 0.46711895 0.47351414 0.47962085 0.21240743]\n",
            "  [0.47606174 0.47600915 0.46708071 0.48232336 0.15122521]\n",
            "  [0.47235161 0.46792533 0.45876679 0.47741877 0.12698116]]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# Get the predicted values\n",
        "y_pred_scaled = model_MLP.predict(x_test)\n",
        "\n",
        "# Unscale the predicted values\n",
        "y_pred = scaler_pred.inverse_transform(y_pred_scaled)\n",
        "y_test_unscaled = scaler_pred.inverse_transform(y_test.reshape(-1, 1))\n",
        "\n",
        "#Acurracy score\n",
        "# print(y_test_unscaled)\n",
        "# print(y_pred)\n",
        "\n",
        "# Mean Absolute Error (MAE)\n",
        "MAE = mean_absolute_error(y_test_unscaled, y_pred)\n",
        "print(f'Median Absolute Error (MAE): {np.round(MAE, 2)}')\n",
        "\n",
        "# Mean Absolute Percentage Error (MAPE)\n",
        "MAPE = np.mean((np.abs(np.subtract(y_test_unscaled, y_pred)/ y_test_unscaled))) * 100\n",
        "print(f'Mean Absolute Percentage Error (MAPE): {np.round(MAPE, 2)} %')\n",
        "\n",
        "# Median Absolute Percentage Error (MDAPE)\n",
        "MDAPE = np.median((np.abs(np.subtract(y_test_unscaled, y_pred)/ y_test_unscaled)) ) * 100\n",
        "print(f'Median Absolute Percentage Error (MDAPE): {np.round(MDAPE, 2)} %')\n",
        "\n",
        "R2 = r2_score(y_test_unscaled, y_pred)\n",
        "print(f'R Squared (R2): {np.round(R2, 2)}')"
      ],
      "metadata": {
        "id": "DFHxT_BUMg9x",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6aebe08a-f236-4a35-ee55-4a4cfbf48381"
      },
      "execution_count": 299,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "7/7 [==============================] - 0s 2ms/step\n",
            "Median Absolute Error (MAE): 6.18\n",
            "Mean Absolute Percentage Error (MAPE): 5.56 %\n",
            "Median Absolute Percentage Error (MDAPE): 5.55 %\n",
            "R Squared (R2): 0.71\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(y_pred, color = 'red',label = 'Real TATA Stock Price')\n",
        "plt.plot(y_test_unscaled, color= 'blue',label = 'Predicted TAT Stock Price')\n",
        "plt.title('TATA Stock Price Predicion')\n",
        "plt.xlabel('Time')\n",
        "plt.ylabel('TATA Stock Price')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "_smzOmb3Mi_-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "b76c22ba-982c-45f3-c5f0-9ecf095e3e29"
      },
      "execution_count": 300,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# LSTM model"
      ],
      "metadata": {
        "id": "-XW4OWZt2vuD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Configure the neural network model\n",
        "model_LSTM = Sequential()\n",
        "\n",
        "# Model_LSTM with n_neurons = inputshape Timestamps, each with x_train.shape[2] variables\n",
        "n_neurons = x_train.shape[1] * x_train.shape[2]\n",
        "print(n_neurons, x_train.shape[1], x_train.shape[2])\n",
        "model_LSTM.add(LSTM(n_neurons, return_sequences=True, input_shape=(x_train.shape[1], x_train.shape[2]))) \n",
        "model_LSTM.add(LSTM(n_neurons, return_sequences=False))\n",
        "model_LSTM.add(Dense(5))\n",
        "model_LSTM.add(Dense(1))\n",
        "\n",
        "# Compile the model_LSTM\n",
        "model_LSTM.compile(optimizer='adam', loss='mse')"
      ],
      "metadata": {
        "id": "GhcWwSHx2z9H",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "775a0acf-7a97-4b52-d910-e4842c472518"
      },
      "execution_count": 301,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "250 50 5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Training the model\n",
        "epochs = 50\n",
        "batch_size = 16\n",
        "early_stop = EarlyStopping(monitor='val_loss', min_delta=1e-4, patience=5, \n",
        "        verbose=1, mode='auto', restore_best_weights=True)\n",
        "\n",
        "\n",
        "StartTime=time.time()\n",
        "history = model_LSTM.fit(x_train, y_train, \n",
        "                   batch_size=batch_size, \n",
        "                   epochs=epochs,\n",
        "                   validation_data=(x_test, y_test), \n",
        "                   callbacks=[early_stop])\n",
        "EndTime=time.time()\n",
        "\n",
        "print(\"############### Total Time Taken: \",EndTime-StartTime, 's #############')\n",
        "\n"
      ],
      "metadata": {
        "id": "FlH9q_lf25xP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b878d42b-a0f9-4405-ff87-a2cd303018fe"
      },
      "execution_count": 302,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "46/46 [==============================] - 19s 332ms/step - loss: 0.0069 - val_loss: 0.0026\n",
            "Epoch 2/50\n",
            "46/46 [==============================] - 10s 228ms/step - loss: 8.1629e-04 - val_loss: 0.0021\n",
            "Epoch 3/50\n",
            "46/46 [==============================] - 11s 240ms/step - loss: 8.5838e-04 - val_loss: 0.0027\n",
            "Epoch 4/50\n",
            "46/46 [==============================] - 12s 254ms/step - loss: 8.4514e-04 - val_loss: 0.0019\n",
            "Epoch 5/50\n",
            "46/46 [==============================] - 10s 227ms/step - loss: 8.1241e-04 - val_loss: 0.0019\n",
            "Epoch 6/50\n",
            "46/46 [==============================] - 11s 232ms/step - loss: 8.3795e-04 - val_loss: 0.0019\n",
            "Epoch 7/50\n",
            "46/46 [==============================] - 11s 231ms/step - loss: 7.3323e-04 - val_loss: 0.0022\n",
            "Epoch 8/50\n",
            "46/46 [==============================] - 10s 225ms/step - loss: 6.6450e-04 - val_loss: 0.0027\n",
            "Epoch 9/50\n",
            "46/46 [==============================] - ETA: 0s - loss: 6.8863e-04Restoring model weights from the end of the best epoch: 4.\n",
            "46/46 [==============================] - 10s 223ms/step - loss: 6.8863e-04 - val_loss: 0.0061\n",
            "Epoch 9: early stopping\n",
            "############### Total Time Taken:  104.41567277908325 s #############\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot training & validation loss values\n",
        "fig, ax = plt.subplots(figsize=(16, 5), sharex=True)\n",
        "sns.lineplot(data=history.history[\"loss\"])\n",
        "plt.title(\"Model loss\")\n",
        "plt.ylabel(\"Loss\")\n",
        "plt.xlabel(\"Epoch\")\n",
        "ax.xaxis.set_major_locator(plt.MaxNLocator(epochs))\n",
        "plt.legend([\"Train\", \"Test\"], loc=\"upper left\")\n",
        "plt.grid()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "FngW-ukM3CoK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "outputId": "39343685-c47f-4172-9f66-cabd65545478"
      },
      "execution_count": 303,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# Get the predicted values\n",
        "y_pred_scaled = model_LSTM.predict(x_test)\n",
        "\n",
        "# Unscale the predicted values\n",
        "y_pred = scaler_pred.inverse_transform(y_pred_scaled)\n",
        "y_test_unscaled = scaler_pred.inverse_transform(y_test.reshape(-1, 1))\n",
        "\n",
        "#Acurracy score\n",
        "# print(y_test_unscaled)\n",
        "# print(y_pred)\n",
        "\n",
        "# Mean Absolute Error (MAE)\n",
        "MAE = mean_absolute_error(y_test_unscaled, y_pred)\n",
        "print(f'Median Absolute Error (MAE): {np.round(MAE, 2)}')\n",
        "\n",
        "# Mean Absolute Percentage Error (MAPE)\n",
        "MAPE = np.mean((np.abs(np.subtract(y_test_unscaled, y_pred)/ y_test_unscaled))) * 100\n",
        "print(f'Mean Absolute Percentage Error (MAPE): {np.round(MAPE, 2)} %')\n",
        "\n",
        "# Median Absolute Percentage Error (MDAPE)\n",
        "MDAPE = np.median((np.abs(np.subtract(y_test_unscaled, y_pred)/ y_test_unscaled)) ) * 100\n",
        "print(f'Median Absolute Percentage Error (MDAPE): {np.round(MDAPE, 2)} %')\n",
        "\n",
        "R2 = r2_score(y_test_unscaled, y_pred)\n",
        "print(f'R Squared (R2): {np.round(R2, 2)}')"
      ],
      "metadata": {
        "id": "M_oBctHm3nVX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "45765d27-e452-41cb-a00a-10b874a491c1"
      },
      "execution_count": 304,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "7/7 [==============================] - 1s 86ms/step\n",
            "Median Absolute Error (MAE): 3.72\n",
            "Mean Absolute Percentage Error (MAPE): 3.27 %\n",
            "Median Absolute Percentage Error (MDAPE): 3.11 %\n",
            "R Squared (R2): 0.9\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(y_pred, color = 'red',label = 'Real TATA Stock Price')\n",
        "plt.plot(y_test_unscaled, color= 'blue',label = 'Predicted TAT Stock Price')\n",
        "plt.title('TATA Stock Price Predicion')\n",
        "plt.xlabel('Time')\n",
        "plt.ylabel('TATA Stock Price')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "JTicbrHt3pUK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "666f70f9-9336-4205-9548-1c05e529a3eb"
      },
      "execution_count": 305,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Predict Next 14 day"
      ],
      "metadata": {
        "id": "Eut7Bg9Okpyf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from numpy import array\n",
        "import numpy as np\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense, SimpleRNN, Dropout\n",
        "from keras.regularizers import l1\n",
        "from keras.callbacks import EarlyStopping\n",
        "from datetime import datetime, timedelta"
      ],
      "metadata": {
        "id": "-hWg2AIgaswD"
      },
      "execution_count": 306,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "----"
      ],
      "metadata": {
        "id": "qClEUna6djuB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a new dataframe with only the 'Close column \n",
        "LSTM_temp = df_Close\n",
        "# Convert the dataframe to a numpy array\n",
        "dataset = LSTM_temp.values\n",
        "# Get the number of rows to train the model on\n",
        "training_data_len = int(np.ceil( len(dataset) * .80 )) #We use 80% traing and 20% test - this means it predicts from 2019 in july.\n",
        "\n",
        "training_data_len"
      ],
      "metadata": {
        "id": "I2UuKhmffDK6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0d15dd85-80ce-4af7-9bbc-531d190c4da2"
      },
      "execution_count": 307,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "784"
            ]
          },
          "metadata": {},
          "execution_count": 307
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Scale the data\n",
        "scaler = MinMaxScaler(feature_range=(0,1))\n",
        "scaled_data = scaler.fit_transform(dataset)\n",
        "\n",
        "\n",
        "# Create the training data set \n",
        "# Create the scaled training data set\n",
        "train_data = scaled_data[0:int(training_data_len), :]\n",
        "# Split the data into x_train and y_train data sets\n",
        "x_train = []\n",
        "y_train = []\n",
        "\n",
        "for i in range(60, len(train_data)):\n",
        "    x_train.append(train_data[i-60:i, 0])\n",
        "    y_train.append(train_data[i, 0])\n",
        "    if i<= 61:\n",
        "        print(x_train)\n",
        "        print(y_train)\n",
        "        print()\n",
        "        \n",
        "# Convert the x_train and y_train to numpy arrays \n",
        "x_train, y_train = np.array(x_train), np.array(y_train)\n",
        "\n",
        "# Reshape the data\n",
        "x_train = np.reshape(x_train, (x_train.shape[0], x_train.shape[1], 1))\n",
        "# x_train.shape"
      ],
      "metadata": {
        "id": "S5XeOsecfHBy",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "569028d2-7753-4480-ed5f-f84c130c7bd9"
      },
      "execution_count": 308,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[array([0.014909  , 0.        , 0.0273507 , 0.02618959, 0.03013831,\n",
            "       0.02932758, 0.02716051, 0.02058435, 0.01432847, 0.03057371,\n",
            "       0.03248553, 0.03695472, 0.04113864, 0.02725562, 0.02978299,\n",
            "       0.0289472 , 0.03750024, 0.02703542, 0.02230093, 0.03653432,\n",
            "       0.05020219, 0.04738952, 0.0584249 , 0.06502612, 0.04963165,\n",
            "       0.04136388, 0.03953714, 0.03951213, 0.05270454, 0.05209895,\n",
            "       0.05285467, 0.04884089, 0.05129822, 0.04891596, 0.04049304,\n",
            "       0.04719937, 0.04671391, 0.0495816 , 0.05004205, 0.05197883,\n",
            "       0.06252376, 0.06593196, 0.07305367, 0.07096672, 0.06367986,\n",
            "       0.0631894 , 0.0799251 , 0.08865333, 0.08871338, 0.08482473,\n",
            "       0.08427921, 0.08417913, 0.09148099, 0.10405282, 0.10784136,\n",
            "       0.09480913, 0.08855325, 0.08435928, 0.07855384, 0.0762867 ])]\n",
            "[0.07869897782614632]\n",
            "\n",
            "[array([0.014909  , 0.        , 0.0273507 , 0.02618959, 0.03013831,\n",
            "       0.02932758, 0.02716051, 0.02058435, 0.01432847, 0.03057371,\n",
            "       0.03248553, 0.03695472, 0.04113864, 0.02725562, 0.02978299,\n",
            "       0.0289472 , 0.03750024, 0.02703542, 0.02230093, 0.03653432,\n",
            "       0.05020219, 0.04738952, 0.0584249 , 0.06502612, 0.04963165,\n",
            "       0.04136388, 0.03953714, 0.03951213, 0.05270454, 0.05209895,\n",
            "       0.05285467, 0.04884089, 0.05129822, 0.04891596, 0.04049304,\n",
            "       0.04719937, 0.04671391, 0.0495816 , 0.05004205, 0.05197883,\n",
            "       0.06252376, 0.06593196, 0.07305367, 0.07096672, 0.06367986,\n",
            "       0.0631894 , 0.0799251 , 0.08865333, 0.08871338, 0.08482473,\n",
            "       0.08427921, 0.08417913, 0.09148099, 0.10405282, 0.10784136,\n",
            "       0.09480913, 0.08855325, 0.08435928, 0.07855384, 0.0762867 ]), array([0.        , 0.0273507 , 0.02618959, 0.03013831, 0.02932758,\n",
            "       0.02716051, 0.02058435, 0.01432847, 0.03057371, 0.03248553,\n",
            "       0.03695472, 0.04113864, 0.02725562, 0.02978299, 0.0289472 ,\n",
            "       0.03750024, 0.02703542, 0.02230093, 0.03653432, 0.05020219,\n",
            "       0.04738952, 0.0584249 , 0.06502612, 0.04963165, 0.04136388,\n",
            "       0.03953714, 0.03951213, 0.05270454, 0.05209895, 0.05285467,\n",
            "       0.04884089, 0.05129822, 0.04891596, 0.04049304, 0.04719937,\n",
            "       0.04671391, 0.0495816 , 0.05004205, 0.05197883, 0.06252376,\n",
            "       0.06593196, 0.07305367, 0.07096672, 0.06367986, 0.0631894 ,\n",
            "       0.0799251 , 0.08865333, 0.08871338, 0.08482473, 0.08427921,\n",
            "       0.08417913, 0.09148099, 0.10405282, 0.10784136, 0.09480913,\n",
            "       0.08855325, 0.08435928, 0.07855384, 0.0762867 , 0.07869898])]\n",
            "[0.07869897782614632, 0.08926890366213136]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Configure the neural network model_rnn\n",
        "model_rnn = Sequential()\n",
        "\n",
        "\n",
        "\n",
        "# model_rnn with n_neurons = inputshape Timestamps, each with x_train.shape[2] variables\n",
        "n_neurons = x_train.shape[1] * x_train.shape[2]\n",
        "\n",
        "\n",
        "model_rnn.add(SimpleRNN(n_neurons, return_sequences = True, input_shape = (x_train.shape[1], x_train.shape[2])))\n",
        "model_rnn.add(SimpleRNN(n_neurons, return_sequences = False))\n",
        "\n",
        "model_rnn.add(Dense(5))\n",
        "model_rnn.add(Dense(1))\n",
        "\n",
        "model_rnn.compile(optimizer='adam', loss='mse')"
      ],
      "metadata": {
        "id": "I6lv_gkffPQH"
      },
      "execution_count": 309,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "history = model_rnn.fit(x_train, y_train, epochs = 40, batch_size = 32, validation_split=0.2)"
      ],
      "metadata": {
        "id": "VFy0IihLfZgF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "faa9652d-d92c-4a44-93bc-a02724d368a7"
      },
      "execution_count": 310,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/40\n",
            "19/19 [==============================] - 2s 43ms/step - loss: 0.0893 - val_loss: 0.0025\n",
            "Epoch 2/40\n",
            "19/19 [==============================] - 0s 24ms/step - loss: 0.0062 - val_loss: 0.0026\n",
            "Epoch 3/40\n",
            "19/19 [==============================] - 0s 24ms/step - loss: 0.0013 - val_loss: 0.0024\n",
            "Epoch 4/40\n",
            "19/19 [==============================] - 0s 25ms/step - loss: 8.3082e-04 - val_loss: 0.0020\n",
            "Epoch 5/40\n",
            "19/19 [==============================] - 0s 25ms/step - loss: 9.9593e-04 - val_loss: 0.0032\n",
            "Epoch 6/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 8.3896e-04 - val_loss: 0.0020\n",
            "Epoch 7/40\n",
            "19/19 [==============================] - 0s 26ms/step - loss: 9.3452e-04 - val_loss: 0.0023\n",
            "Epoch 8/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 7.6137e-04 - val_loss: 0.0084\n",
            "Epoch 9/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 9.5926e-04 - val_loss: 0.0039\n",
            "Epoch 10/40\n",
            "19/19 [==============================] - 1s 29ms/step - loss: 8.4502e-04 - val_loss: 0.0027\n",
            "Epoch 11/40\n",
            "19/19 [==============================] - 0s 26ms/step - loss: 7.3062e-04 - val_loss: 0.0031\n",
            "Epoch 12/40\n",
            "19/19 [==============================] - 0s 25ms/step - loss: 5.9852e-04 - val_loss: 0.0025\n",
            "Epoch 13/40\n",
            "19/19 [==============================] - 0s 26ms/step - loss: 6.5645e-04 - val_loss: 0.0017\n",
            "Epoch 14/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 9.1892e-04 - val_loss: 0.0043\n",
            "Epoch 15/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 5.8028e-04 - val_loss: 0.0028\n",
            "Epoch 16/40\n",
            "19/19 [==============================] - 1s 28ms/step - loss: 4.9286e-04 - val_loss: 0.0019\n",
            "Epoch 17/40\n",
            "19/19 [==============================] - 0s 26ms/step - loss: 5.1895e-04 - val_loss: 0.0025\n",
            "Epoch 18/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 6.9183e-04 - val_loss: 0.0020\n",
            "Epoch 19/40\n",
            "19/19 [==============================] - 1s 26ms/step - loss: 5.5279e-04 - val_loss: 0.0026\n",
            "Epoch 20/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 5.7001e-04 - val_loss: 0.0048\n",
            "Epoch 21/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 7.9139e-04 - val_loss: 0.0019\n",
            "Epoch 22/40\n",
            "19/19 [==============================] - 0s 26ms/step - loss: 4.2730e-04 - val_loss: 0.0016\n",
            "Epoch 23/40\n",
            "19/19 [==============================] - 0s 26ms/step - loss: 5.0772e-04 - val_loss: 0.0014\n",
            "Epoch 24/40\n",
            "19/19 [==============================] - 1s 26ms/step - loss: 6.0639e-04 - val_loss: 0.0013\n",
            "Epoch 25/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 5.0567e-04 - val_loss: 0.0021\n",
            "Epoch 26/40\n",
            "19/19 [==============================] - 1s 28ms/step - loss: 5.1841e-04 - val_loss: 0.0025\n",
            "Epoch 27/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 4.3904e-04 - val_loss: 0.0025\n",
            "Epoch 28/40\n",
            "19/19 [==============================] - 0s 24ms/step - loss: 5.0160e-04 - val_loss: 0.0012\n",
            "Epoch 29/40\n",
            "19/19 [==============================] - 0s 25ms/step - loss: 4.8006e-04 - val_loss: 0.0022\n",
            "Epoch 30/40\n",
            "19/19 [==============================] - 0s 27ms/step - loss: 8.3961e-04 - val_loss: 0.0017\n",
            "Epoch 31/40\n",
            "19/19 [==============================] - 0s 26ms/step - loss: 4.0941e-04 - val_loss: 0.0011\n",
            "Epoch 32/40\n",
            "19/19 [==============================] - 0s 26ms/step - loss: 4.3039e-04 - val_loss: 0.0011\n",
            "Epoch 33/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 4.0769e-04 - val_loss: 0.0017\n",
            "Epoch 34/40\n",
            "19/19 [==============================] - 1s 28ms/step - loss: 3.6659e-04 - val_loss: 0.0024\n",
            "Epoch 35/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 7.1557e-04 - val_loss: 0.0058\n",
            "Epoch 36/40\n",
            "19/19 [==============================] - 0s 26ms/step - loss: 7.5703e-04 - val_loss: 0.0025\n",
            "Epoch 37/40\n",
            "19/19 [==============================] - 1s 28ms/step - loss: 5.5343e-04 - val_loss: 0.0013\n",
            "Epoch 38/40\n",
            "19/19 [==============================] - 1s 27ms/step - loss: 8.9960e-04 - val_loss: 0.0012\n",
            "Epoch 39/40\n",
            "19/19 [==============================] - 1s 29ms/step - loss: 4.9284e-04 - val_loss: 0.0014\n",
            "Epoch 40/40\n",
            "19/19 [==============================] - 0s 25ms/step - loss: 5.3654e-04 - val_loss: 0.0032\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_predict = df_Close[-60:].values.reshape(-1, 1)\n",
        "X_predict = scaler.transform(X_predict)\n",
        "y_pred_new = []\n",
        "for i in range(14):\n",
        "  new_X = X_predict[-60:].reshape(1, 60, 1)\n",
        "  new_pred = model_rnn.predict(new_X)\n",
        "  X_predict = np.concatenate((X_predict, new_pred), axis=0)\n",
        "  y_pred_new.append(new_pred[0])\n",
        "y_pred_new = np.array(y_pred_new)"
      ],
      "metadata": {
        "id": "z7CQvPj6ae4B",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "872e5d85-62ef-4a0a-cb7d-c7b7a1536114"
      },
      "execution_count": 311,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 250ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 23ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 24ms/step\n",
            "1/1 [==============================] - 0s 25ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 25ms/step\n",
            "1/1 [==============================] - 0s 29ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 32ms/step\n",
            "1/1 [==============================] - 0s 24ms/step\n",
            "1/1 [==============================] - 0s 19ms/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred_inv = scaler.inverse_transform(y_pred_new).reshape(-1,)\n",
        "print(y_pred_inv)\n",
        "\n",
        "#Vẽ đồ thị dự đoán 14 ngày tiếp theo\n",
        "\n",
        "plt.plot(y_pred_inv)\n",
        "plt.xlabel('No. of days')\n",
        "plt.ylabel('Price')\n",
        "plt.title(\"Predicting the next 14 days's stock prices\")\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "c8cuA4Bthm0-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "outputId": "7f875836-1937-463f-81f5-2161ef20ba4b"
      },
      "execution_count": 312,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[95.33755  92.03309  90.809906 88.90111  86.26615  84.946594 82.6148\n",
            " 80.00168  77.48655  75.30233  72.508064 69.54451  67.409546 64.46801 ]\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "MLP model."
      ],
      "metadata": {
        "id": "NgaKe9tFzgqL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# MLP \n",
        "model_MLP = tf.keras.models.Sequential([\n",
        "  tf.keras.layers.Flatten(input_shape = (60,1)),\n",
        "  tf.keras.layers.Dense(128, activation='relu'),\n",
        "  tf.keras.layers.Dropout(0.2),\n",
        "  tf.keras.layers.Dense(1)\n",
        "])"
      ],
      "metadata": {
        "id": "lHFtVGmjzFfB"
      },
      "execution_count": 313,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model_MLP.compile(optimizer='adam',\n",
        "              loss='mae')"
      ],
      "metadata": {
        "id": "zmI_PPTdzFW9"
      },
      "execution_count": 314,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "history = model_MLP.fit(x_train, y_train, epochs = 40, batch_size = 32, validation_split=0.2)"
      ],
      "metadata": {
        "id": "TFoEY6ZwzFCA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "dba932b6-349d-4de2-f383-30d40ed5c943"
      },
      "execution_count": 315,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/40\n",
            "19/19 [==============================] - 1s 8ms/step - loss: 0.1031 - val_loss: 0.2366\n",
            "Epoch 2/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0818 - val_loss: 0.0993\n",
            "Epoch 3/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0611 - val_loss: 0.0673\n",
            "Epoch 4/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0540 - val_loss: 0.0735\n",
            "Epoch 5/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0420 - val_loss: 0.2096\n",
            "Epoch 6/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0517 - val_loss: 0.1117\n",
            "Epoch 7/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0424 - val_loss: 0.0996\n",
            "Epoch 8/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0328 - val_loss: 0.0571\n",
            "Epoch 9/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0313 - val_loss: 0.0729\n",
            "Epoch 10/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0322 - val_loss: 0.0284\n",
            "Epoch 11/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0336 - val_loss: 0.0317\n",
            "Epoch 12/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0333 - val_loss: 0.1272\n",
            "Epoch 13/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0396 - val_loss: 0.0318\n",
            "Epoch 14/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0287 - val_loss: 0.0303\n",
            "Epoch 15/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0303 - val_loss: 0.0331\n",
            "Epoch 16/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0271 - val_loss: 0.0947\n",
            "Epoch 17/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0313 - val_loss: 0.0298\n",
            "Epoch 18/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0279 - val_loss: 0.0304\n",
            "Epoch 19/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0307 - val_loss: 0.0879\n",
            "Epoch 20/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0275 - val_loss: 0.0817\n",
            "Epoch 21/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0274 - val_loss: 0.0299\n",
            "Epoch 22/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0262 - val_loss: 0.0287\n",
            "Epoch 23/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0258 - val_loss: 0.1269\n",
            "Epoch 24/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0339 - val_loss: 0.1015\n",
            "Epoch 25/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0311 - val_loss: 0.0484\n",
            "Epoch 26/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0279 - val_loss: 0.0500\n",
            "Epoch 27/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0274 - val_loss: 0.0316\n",
            "Epoch 28/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0272 - val_loss: 0.0493\n",
            "Epoch 29/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0291 - val_loss: 0.0302\n",
            "Epoch 30/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0282 - val_loss: 0.0914\n",
            "Epoch 31/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0279 - val_loss: 0.0278\n",
            "Epoch 32/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0272 - val_loss: 0.0270\n",
            "Epoch 33/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0258 - val_loss: 0.0297\n",
            "Epoch 34/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0253 - val_loss: 0.0666\n",
            "Epoch 35/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0258 - val_loss: 0.0260\n",
            "Epoch 36/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0249 - val_loss: 0.0330\n",
            "Epoch 37/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0262 - val_loss: 0.0360\n",
            "Epoch 38/40\n",
            "19/19 [==============================] - 0s 3ms/step - loss: 0.0239 - val_loss: 0.0248\n",
            "Epoch 39/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0238 - val_loss: 0.0338\n",
            "Epoch 40/40\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.0254 - val_loss: 0.0479\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_predict = df_Close[-60:].values.reshape(-1, 1)\n",
        "X_predict = scaler.transform(X_predict)\n",
        "y_pred_new = []\n",
        "for i in range(14):\n",
        "  new_X = X_predict[-60:].reshape(1, 60, 1)\n",
        "  new_pred = model_MLP.predict(new_X)\n",
        "  X_predict = np.concatenate((X_predict, new_pred), axis=0)\n",
        "  y_pred_new.append(new_pred[0])\n",
        "y_pred_new = np.array(y_pred_new)"
      ],
      "metadata": {
        "id": "xRh7iI9bpJK4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9eaf845e-3ca3-48da-fe0e-375dc7dfb6ec"
      },
      "execution_count": 316,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 51ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 19ms/step\n",
            "1/1 [==============================] - 0s 19ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 19ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred_inv = scaler.inverse_transform(y_pred_new).reshape(-1,)\n",
        "print(y_pred_inv)\n",
        "\n",
        "#Vẽ đồ thị dự đoán 14 ngày tiếp theo\n",
        "\n",
        "plt.plot(y_pred_inv)\n",
        "plt.xlabel('No. of days')\n",
        "plt.ylabel('Price')\n",
        "plt.title(\"Predicting the next 14 days's stock prices\")\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "GQ5JuQqEzObm",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 349
        },
        "outputId": "61f95eee-7d17-4c86-ffd2-e491d8a79215"
      },
      "execution_count": 317,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[103.792496 104.38024  104.231514 106.071    107.94725  110.171326\n",
            " 110.54729  110.60286  111.35858  111.00355  111.800606 112.872475\n",
            " 111.565735 111.34863 ]\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}
